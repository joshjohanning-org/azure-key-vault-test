# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # this is needed for oidc
  contents: read # this is needed to clone repo
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5

      # logging in with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: d951ac80-75f2-446a-aca6-cd53a68611f0
          tenant-id: e9846558-c4f0-4312-a89e-ebebe80779a1
          subscription-id: 2e9bfb26-ca29-44f5-8920-72c1b0b37188

      - name: get all az keyvault secrets
        run: |
          for secret_name in $(az keyvault secret list --vault-name josh-key-vault-test --query "[].{name:name}" --output tsv); do
            secret_value=$(az keyvault secret show --vault-name "josh-key-vault-test" --name $secret_name --query value -o tsv)
            echo "getting and masking $secret_name"
            echo "::add-mask::$secret_value"
            echo "$secret_name=$secret_value" >> $GITHUB_ENV
          done
          
      - name: testing secrets
        run: |
          echo "echoing as secret: ${{ secrets.my-secret }}" # doesn't work
          echo "echoing as env: ${{ env.my-secret }}" # works
          
          
# echo "echoing as step output: ${{ steps.getSecrets.outputs.othersecret }}" # works

# should be using az keyvault secret show and echo "::add-mask::{value}"
